# Generated by Django 4.2.7 on 2023-11-13 22:25

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import web.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('edited_at', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BaseModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('edited_at', models.DateTimeField(auto_now_add=True)),
                ('private', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BrewBatch',
            fields=[
                ('basemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='web.basemodel')),
                ('volume_quantity', models.FloatField()),
                ('datetime_start', models.DateTimeField(auto_now=True)),
                ('date_end', models.DateField(blank=True)),
                ('uid', models.CharField(default=web.models.generate_uuid_str, max_length=50)),
            ],
            bases=('web.basemodel',),
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('basemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='web.basemodel')),
                ('name', models.CharField(max_length=50)),
                ('quantity', models.FloatField()),
                ('note', models.TextField(blank=True, max_length=255)),
            ],
            bases=('web.basemodel',),
        ),
        migrations.CreateModel(
            name='UnitOfMeasure',
            fields=[
                ('basemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='web.basemodel')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(max_length=200)),
            ],
            bases=('web.basemodel',),
        ),
        migrations.CreateModel(
            name='Reciepe',
            fields=[
                ('basemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='web.basemodel')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('note', models.TextField(blank=True, max_length=255)),
                ('ingredients', models.ManyToManyField(related_name='reciepes', to='web.ingredient')),
            ],
            bases=('web.basemodel',),
        ),
        migrations.AddField(
            model_name='ingredient',
            name='unit_of_measurement',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='web.unitofmeasure'),
        ),
        migrations.CreateModel(
            name='DensityReading',
            fields=[
                ('basemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='web.basemodel')),
                ('read_value', models.FloatField()),
                ('note', models.TextField(max_length=255)),
                ('brew_batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='density_readings', to='web.brewbatch')),
            ],
            bases=('web.basemodel',),
        ),
        migrations.AddField(
            model_name='brewbatch',
            name='related_reciepe',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='web.reciepe'),
        ),
        migrations.AddField(
            model_name='brewbatch',
            name='volume_uom',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='web.unitofmeasure'),
        ),
    ]
